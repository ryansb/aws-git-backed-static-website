---
AWSTemplateFormatVersion: "2010-09-09"

Description: |
  Static web site stack including:
  * CodeCommit Git repository
  * S3 bucket for web site content
  * Redirect from "www." to base domain
  * Access logs written to logs bucket
  * ACM Certificate for SSL
  * CloudFront distribution for website https access
  * Route 53 hosted zone with DNS entries
  * CodePipeline (source CodeCommit, invoke Lambda)
  * S3 bucket for CodePipeline artifacts
  * AWS Lambda function to copy CodeCommit Git changes to website S3 bucket
  * SNS topic for CodeCommit Git change notifications
  * Email address subscribed to SNS notification topic

Parameters:
  # Domain: example.com
  DomainName:
    Type: String
    Description: "The base domain name for the web site (no 'www')"
    MinLength: 4
    MaxLength: 253
    AllowedPattern: "[a-z0-9]+[-.a-z0-9]*(\\.[a-z][a-z]+)+"
    ConstraintDescription: "Provide a valid domain name using only lowercase letters, numbers, and dash (-)"
  # Email address to receive Git activity notifications: you@anotherdomain.com
  # CANNOT be in same domain!
  OperatorEmail:
    Type: String
    Description: "Initial email address to receive Git change notifications"
    MinLength: 6
    AllowedPattern: ".+@[a-z0-9]+[-.a-z0-9]*(\\.[a-z][a-z]+)+"
    ConstraintDescription: "Provide a valid email address"
  DefaultTTL:
    Type: Number
    Description: "TTL in seconds"
    Default: 30
  MinimumTTL:
    Description: "Minimum cache lifetime in seconds for the CloudFront distribution"
    Default: 5
    Type: Number
  PriceClass:
    Description: "Distribution price class. Default is US-only, PriceClass_All is worldwide but more expensive."
    Default: PriceClass_100
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    Type: String
  FunctionS3Bucket:
    Type: String
    Description: "S3 bucket containing ZIP of AWS Lambda function"
    Default: "run.alestic.com"
  FunctionS3Key:
    Type: String
    Description: "S3 key containing ZIP of AWS Lambda function"
    Default: "lambda/aws-lambda-git-backed-static-website.zip"

Mappings:
  RegionMap:
    # This is a map of the S3 website endpoints as of Oct 22 2016
    # http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region
    us-east-1:
      S3hostedzoneID: "Z3AQBSTGFYJSTF"
    us-east-2:
      S3hostedzoneID: "Z2O1EMRO9K5GLX"
    us-west-1:
      S3hostedzoneID: "Z2F56UZL2M1ACD"
    us-west-2:
      S3hostedzoneID: "Z3BJ6K6RIION7M"
    eu-west-1:
      S3hostedzoneID: "Z1BKCTXD74EZPE"
    eu-central-1:
      S3hostedzoneID: "Z21DNDUVLTQW6Q"
    sa-east-1:
      S3hostedzoneID: "Z7KQH4QJS55SO"
    ap-northeast-1:
      S3hostedzoneID: "Z2M4EHUR26P7ZW"
    ap-northeast-2:
      S3hostedzoneID: "Z3W03O7B5YMIYP"
    ap-southeast-1:
      S3hostedzoneID: "Z3O0J2DXBE1FTB"
    ap-southeast-2:
      S3hostedzoneID: "Z1WCIGYICN2BYD"
    ap-south-1:
      S3hostedzoneID: "Z11RGJOFQNVJUP"

Resources:
  # Bucket for CloudFront and S3 access logs: logs.example.com
  LogsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "logs.${DomainName}"
      AccessControl: LogDeliveryWrite
    DeletionPolicy: Retain

  # Bucket for site content: example.com
  SiteBucket:
    Type: "AWS::S3::Bucket"
    DependsOn: LogsBucket
    Properties:
      BucketName: !Ref DomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      # logs.example.com/logs/s3/example.com/
      LoggingConfiguration:
        DestinationBucketName: !Ref LogsBucket
        LogFilePrefix: !Sub "logs/s3/${DomainName}/"
    DeletionPolicy: Retain

  # Bucket to redirect to example.com: www.example.com
  RedirectBucket:
    Type: "AWS::S3::Bucket"
    DependsOn: LogsBucket
    Properties: 
      BucketName: !Sub "www.${DomainName}"
      AccessControl: BucketOwnerFullControl
      # logs.example.com/logs/s3/www.example.com/
      LoggingConfiguration:
        DestinationBucketName: !Ref LogsBucket
        LogFilePrefix: !Sub "logs/s3/www.${DomainName}/"
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref DomainName
          Protocol: https
    DeletionPolicy: Delete

  # Bucket for CodePipeline artifact storage: codepipeline.example.com
  CodePipelineBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "codepipeline.${DomainName}"
      VersioningConfiguration:
        Status: Enabled
    DeletionPolicy: Retain

  # Certificate for HTTPS accesss through CloudFront
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties: 
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub "www.${DomainName}"

  # CDN serves S3 content over HTTPS for example.com and www.example.com
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - !Ref DomainName
          - !Sub "www.${DomainName}"
        DefaultRootObject: index.html
        PriceClass: !Ref PriceClass
        Origins:
          -
            DomainName: !Sub "${DomainName}.s3-website-${AWS::Region}.amazonaws.com"
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: !Ref DefaultTTL
          MinTTL: !Ref DefaultTTL
          ForwardedValues:
            QueryString: false
            Cookies:
             Forward: none
          ViewerProtocolPolicy: redirect-to-https
        # logs.example.com/logs/cloudfront/example.com/
        Logging:
          Bucket: !GetAtt LogsBucket.DomainName
          Prefix: !Sub "logs/cloudfront/${DomainName}/"
          IncludeCookies: false
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only

  # DNS: example.com, www.example.com
  Route53HostedZone:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: !Sub "Created by CloudFormation stack: ${AWS::StackName}"
      Name: !Ref DomainName
  Route53RecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: !Ref Route53HostedZone
      RecordSets:
        # example.com
        - Name: !Sub "${DomainName}."
          Type: A
          # Resolve to CloudFront distribution
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # CloudFront
            DNSName: !GetAtt CloudFrontDistribution.DomainName
        # www.example.com
        - Name: !Sub "www.${DomainName}."
          Type: A
          AliasTarget:
            HostedZoneId: !FindInMap [RegionMap, !Ref "AWS::Region", S3hostedzoneID]
            DNSName: !Sub "${DomainName}.s3-website-${AWS::Region}.amazonaws.com"

  # SNS topic for Git repository activity. Email subscription
  NotificationTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: !Sub "Activity in ${DomainName} Git repository"
      Subscription:
        - Endpoint: !Ref OperatorEmail
          Protocol: email

  # Git repositry: example.com
  GitRepository:
    Type: "AWS::CodeCommit::Repository"
    Properties: 
      RepositoryDescription: !Sub "Git repository for ${DomainName}"
      RepositoryName: !Ref DomainName
      Triggers:
        - Name: !Sub "Activity in ${DomainName} Git repository"
          DestinationArn: !Ref NotificationTopic
          Events:
            - all
    DeletionPolicy: Retain

  # IAM info for AWS Lambda function
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: !Sub "${DomainName}-execution-policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: "logs:*"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - "codepipeline:PutJobSuccessResult"
                  - "codepipeline:PutJobFailureResult"
                Resource: "*"
              - Effect: Allow
                Action: "s3:*"
                Resource:
                  - "arn:aws:s3:::*"
                  - !Sub "arn:aws:s3:::${CodePipelineBucket}"
                  - !Sub "arn:aws:s3:::${CodePipelineBucket}/*"

  LambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties: 
      Description:  !Sub "Copy Git branch contents to S3 bucket for ${DomainName}"
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 1536
      Timeout: 300
      Runtime: python2.7
      Handler: index.handler
      Code:
        S3Bucket: !Ref FunctionS3Bucket
        S3Key: !Ref FunctionS3Key

  # IAM info for CodePipeline
  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "codepipeline-service"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: "*"
                Resource: "*"

  # CodePipeline: Pass Git contents to AWS Lambda function on Git activity
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub "${DomainName}-codepipeline"
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineBucket
      RestartExecutionOnUpdate: false
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/${CodePipelineRole}"
      Stages: 
        - Name: Source
          Actions: 
            - Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration: 
                RepositoryName: !Ref DomainName
                BranchName: master
              OutputArtifacts: 
                - Name: Content
              RunOrder: 1
        - Name: Invoke
          Actions: 
            - Name: InvokeAction
              InputArtifacts: 
                - Name: Content
              ActionTypeId: 
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: 1
              Configuration:
                FunctionName: !Ref LambdaFunction
                UserParameters: !Ref DomainName
              RunOrder: 1

Outputs:
  DomainName:
    Description: Domain name
    Value: !Ref DomainName
  WWWDomainName:
    Description: Redirect hostname
    Value: !Ref RedirectBucket
  LogsBucket:
    Description: S3 Bucket with access logs
    Value: !Ref LogsBucket
  HostedZoneId:
    Description: Route 53 Hosted Zone id
    Value: !Ref Route53HostedZone
  CloudFrontDomain:
    Description: CloudFront distribution domain name
    Value: !Ref CloudFrontDistribution
  CodePipelineArn:
    Description: CodePipeline ARN
    Value: !Ref CodePipeline
  GitRepositoryName:
    Description: Git repository name
    Value: !Ref DomainName
  GitCloneUrlHttp:
    Description: Git https clone endpoint
    Value: !GetAtt GitRepository.CloneUrlHttp
  GitCloneUrlSsh:
    Description: Git ssh clone endpoint
    Value: !GetAtt GitRepository.CloneUrlSsh

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Lambda Setup
        Parameters:
          - FunctionS3Bucket
          - FunctionS3Key
      - Label:
          default: CloudFront Options
        Parameters:
          - DomainName
          - PriceClass
          - MinimumTTL
          - DefaultTTL
      - Label:
          default: Notification Preferences
        Parameters:
          - OperatorEmail
